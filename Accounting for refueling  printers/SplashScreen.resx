<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKIAAACBCAYAAABDymGDAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAACABJREFUeF7tnYuR2zYURbeEdBCX4A6cDpIOkg6SDuIO7A6cDlJCSnAJLiElJDyb
        nJk3GFIgpdUz5b1n5g0FEMTn4hKUKC33KYQQQgghhBBCCCGEEEIIIYQQ7subxK4IL8x3S7xf4vMS/yQO
        BZp9WCLGvAENOIr7JbErRt3QMhyEM7iugJ+WeLcE5gz7QTO0U0c0zep4AM9otogZbgPzqSlmzAm9g49L
        aMKcvS9HNSPvG8MFEAuhiJjw5Xm7hPpmVbwAZyoi8b4m3AffM/7+nAqr/LUEIuV94f34YQk0Ruuwwd9L
        5LJxX9AWjdE6bIBARLgv0XlCBOohOk+IQD1E5wkRqIfoPCEC9RCdJ0SgHqLzhAjUQ3SeEIF6iM4TIlAP
        0XlCBOohOk+IQD1E5wkRqIfoPCEC9RCdJ0SgHqLzhAjUQ3SeEIF6iM4TIlAP0XlCBOohOk+IQD1E5wkR
        qIfoPCEC9RCdJ0SgHqLzhAjUQ3SeEIF6iM4TIlAP0XlCBOohOk+IQD1E5wkRqIfoPCEC9RCdJ0SgHqLz
        hAjUQ3SeEIF6iM4TIlAP0XlCBOohOk+IQD1E5wkRqIfoPCEC9RCdJ0SgHqLzhAjUQ3SeEIF6iM4TIlAP
        0XlCBOohOk+IQD1E5wkRqIfoPCH/FPL+5J9C7sB/k/vjcyrcg5+WQOP8m9wL8M+sI9J9+XMJNP75ORVW
        4bLh5Zl/cB1ell+WQNsvS7whI2zz2xKIhSEj1suBlhgQbbnyhB38sYRmzCXkdji5vdJ8IiPs58MSCEdw
        JmPIt0vkE/UcNGIF/HUJPwDGhDfAexovJ4nrg9UQU4YbwZB82vu8hJeYxHagEScwKyC3wnIVeQU4+SF8
        VWLEcApixHAKYsRwCmLEcApixHAKYsRwCmLEcApixHAKYsRwCmLEcApixHAKYsRwCmLEcApixHAT/HKZ
        3+zdGhpxbd/RyC+oXyFMvCY6S9Cn8MrgV8vfnyzyS+oQQgghhBBCCP/BUxt80BKvifB41IdltT2Jg0b8
        A/fxaV3el3v3nJrjTVxgm0fRPR74gbnDCzx30flsYe0ZhnSEPJ7EsBcegeFjMNjmYUuPCXOPF3gSR+tV
        ra6KNsxXU6Q1E/l00GWaLemxo+TxOBG2wsODSK+F9VVsS8Y0x9DG2A7Utirm21/7vxb2aRzziHVsacCK
        QruwRwO2jsvjhHK0Y5laN1h/zVvrf22DfRX27anjrrgq8sQuGvVZK+ITqPi2AOgcab9LpfOsnuQZHENd
        1r0W1lehXfaBz1a0Lwg4PivHdsATiKjiWaerPvVYbgz7NI55RA2sEzzGoF0mc6YBxhrHxdiFNHU5DtOe
        BNbPVsb+U3Zsgzo0npq4+JBvub1vz25G8xFcVmuHwEE58NGIGgAhqMtH0JFmQAyEhweRh2FJbw1OsYHX
        1ezuY+Loi4/tdQKqEX2bYF8JTaPolLcv1n2tEa2TPnGMJxHjnWlg26Qp60ntycRrAl2pW+PZtml1gLH/
        tkEZtHOOxv477x5P2M8WHAyBIRFEnGA6D6MRFQ6h2VcnRaiPPAe+hYJ9/H+rCJiPtG0CE0Ue/QX7SR22
        Yx5lRtHrxG0Z0TERnoigBhxHfWpQy4x1rmlgPRxvO/ZZU/DaMQpp8sG5ow6OJWrbtlHnw8WHfF5XI9an
        /LJtNSLYeQZSQVz32blazjRlalTBjxqRdghPCFfqah6wbXACnRgEpj4n5hojkl/HPJ6MY3g8WIfmvGRE
        2qCtGq7q7CddIW17jnct2O94x3mtdVRNyKeserYb0Uudk18hj9WBM2YcmAPyUsK2rgxw1IiUZ3I4y8EV
        sR5vnRwDCmd+Xakp47FHjGiaOuuqp4HIY6IsT1uigdVlTQPqGvMoV/Vj/1o91A8asY6n9t++jm3UOtTE
        E4L97UbkzPM9g+a6hAOzrEJgZAyjoaswa5OwhoYA68X8rm6kaZc+m/YSpnDgRFAG2Nr2ESN6aWZclmEs
        4+RaJ2V47VuLOt4tDWzr/RJjO8BrwrrVd9S/jsc6HY8nEcdQh2mPsf/EqGebER04Wwd/idGIoJGNug+u
        MaLHkIcRSSswwdnr5QsUDryU2w/qsG1F32PEGpSxvbVVRkMY7Kt6bmlAvu0T47jIY3/VmDpcIfcYkTY0
        MEEbtbya1L61G5EB2eFbsB4Fuhdd7VwLfbtGz615wAwYEbbK7OXs2oUTU40YwleDy+X4VieEEEII4bXD
        Jzxul6yFn/7YcguCGG+ZUK7eIPaGNMdYd93vMdZt+Qpp88Y6xnR9De6v/QwPQL3ZOgb3uJjQeh+O4OYw
        MOGkuW+GAazLT6Hurx8Gxvtn3pMT6l6rw3tw9YYzffO12Nd6Hy88AEwmpiCYQExlGnP5LQFpymocDALe
        CCZfE7gaHTWixiLWjMjKx2tvSI9G1MREjPjAMIEaADCieRiCcLKdaMpowNEAmoj9mIWw7JoR2ed+tlDr
        YDU0H6oRfe3xMeIDUw0ATi6rJPk1/KUM1K/H6vs1TbQWoxH9eRTfxbK1H9ZBH9i6+kE1ov3y68cY8YGp
        BoC6IgqTX81WzWpZjgNNVM3Da/JGI3K85awHrINymlWTjW3XXy/FiA8ME1hNBxqFVa/+emX81Q7pWhaO
        GJF6MBaYhmpEIB/j0bZGJGwjRvwGqAYQJluzEJjADwv+HEsTUNbVCQMdMaI/jwLSW0bEYKQxu0asJo4R
        v3FYgfLLkhBCCCGEEEIIIZyWp6d/Afo/fcMgjp6IAAAAAElFTkSuQmCC
</value>
  </data>
</root>